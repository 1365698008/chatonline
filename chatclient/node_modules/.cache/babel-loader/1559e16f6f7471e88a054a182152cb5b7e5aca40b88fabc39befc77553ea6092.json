{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      params: {\n        pageNum: 1,\n        pageSize: 5\n      },\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      tableData: [],\n      total: 0,\n      showGroupDialog: false,\n      showAddFriendDialog: false,\n      newGroupName: \"\",\n      newFriend: {\n        userName: \"\",\n        userAvatar: \"\",\n        hyGroupName: \"我的好友\"\n      },\n      groupList: [],\n      activeGroups: []\n    };\n  },\n  created() {\n    this.findBySearch();\n    this.getGroups();\n  },\n  methods: {\n    findBySearch() {\n      request.get(\"/hy/list\", {\n        params: this.params\n      }).then(res => {\n        if (res.code === '0') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n          this.groupFriends();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    getGroups() {\n      request.get(\"/hy/groups\").then(res => {\n        if (res.code === '0') {\n          this.groupList = res.data.map(groupName => ({\n            groupName,\n            friends: []\n          }));\n          this.groupFriends();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    groupFriends() {\n      this.groupList.forEach(group => {\n        group.friends = this.tableData.filter(friend => friend.hyGroupName === group.groupName);\n      });\n    },\n    addGroup() {\n      request.post(\"/hy/updateGroup\", {\n        hyGroupName: this.newGroupName\n      }).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            message: '分组添加成功',\n            type: 'success'\n          });\n          this.getGroups();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    deleteGroup(groupName) {\n      request.post(\"/hy/deleteGroup\", {\n        groupName\n      }).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            message: '分组删除成功',\n            type: 'success'\n          });\n          this.getGroups();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    addFriend() {\n      request.post(\"/hy/add\", this.newFriend).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            message: '好友添加成功',\n            type: 'success'\n          });\n          this.findBySearch();\n          this.showAddFriendDialog = false;\n          this.newFriend = {\n            userName: \"\",\n            userAvatar: \"\",\n            hyGroupName: \"我的好友\"\n          };\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    updateGroup(friend) {\n      request.post(\"/hy/update\", friend).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            message: '分组更新成功',\n            type: 'success'\n          });\n          this.findBySearch();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    handleSizeChange(pageSize) {\n      this.params.pageSize = pageSize;\n      this.findBySearch();\n    },\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum;\n      this.findBySearch();\n    },\n    del(id) {\n      request.delete(\"/hy/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n          this.findBySearch();\n        } else {\n          this.$message({\n            message: res.msg,\n            type: 'error'\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","data","params","pageNum","pageSize","user","localStorage","getItem","JSON","parse","tableData","total","showGroupDialog","showAddFriendDialog","newGroupName","newFriend","userName","userAvatar","hyGroupName","groupList","activeGroups","created","findBySearch","getGroups","methods","get","then","res","code","list","groupFriends","$message","message","msg","type","map","groupName","friends","forEach","group","filter","friend","addGroup","post","deleteGroup","addFriend","updateGroup","handleSizeChange","handleCurrentChange","del","id","delete"],"sources":["src/views/Hy.vue"],"sourcesContent":["<!-- <template>\r\n  <div>\r\n    <div>\r\n      <el-table border :data=\"tableData\" style=\"width: 100%\">\r\n        <el-table-column align=\"center\" label=\"头像\">\r\n          <template v-slot=\"scope\">\r\n            <el-image :src=\"scope.row.userAvatar\" :preview-src-list=\"[scope.row.userAvatar]\"\r\n                      style=\"width: 50px; height: 50px; border-radius: 50%\"/>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\" prop=\"userName\" label=\"姓名\"></el-table-column>\r\n        <el-table-column align=\"center\" label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popconfirm title=\"确定删除吗？\" @confirm=\"del(scope.row.id)\">\r\n              <el-button slot=\"reference\" type=\"danger\" style=\"margin-left: 5px\">删除</el-button>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n    <div style=\"margin-top: 10px\">\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"params.pageNum\"\r\n          :page-sizes=\"[5, 10, 15, 20]\"\r\n          :page-size=\"params.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 5\r\n      },\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      tableData: [],\r\n      total: 0,\r\n      dialogFormVisible: false,\r\n      form: {}\r\n    }\r\n  },\r\n  // 页面加载的时候，做一些事情，在created里面\r\n  created() {\r\n    this.findBySearch();\r\n  },\r\n  // 定义一些页面上控件出发的事件调用的方法\r\n  methods: {\r\n    findBySearch() {\r\n      request.get(\"/hy/list\", {\r\n        params: this.params\r\n      }).then(res => {\r\n        if (res.code === '0') {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'success'\r\n          });\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(pageSize) {\r\n      this.params.pageSize = pageSize;\r\n      this.findBySearch();\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.params.pageNum = pageNum;\r\n      this.findBySearch();\r\n    },\r\n    del(id) {\r\n      request.delete(\"/hy/\" + id).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n          this.findBySearch();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'success'\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script> -->\r\n\r\n<template>\r\n  <div>\r\n    <el-button @click=\"showGroupDialog = true\">管理分组</el-button>\r\n    <el-button @click=\"showAddFriendDialog = true\">添加好友</el-button>\r\n\r\n    <!-- 分组列表 -->\r\n    <el-collapse v-model=\"activeGroups\" accordion>\r\n      <el-collapse-item v-for=\"group in groupList\" :key=\"group.groupName\" :title=\"group.groupName\"\r\n        :name=\"group.groupName\">\r\n        <el-table :data=\"group.friends\" style=\"width: 100%\">\r\n          <el-table-column align=\"center\" label=\"头像\">\r\n            <template v-slot=\"scope\">\r\n              <el-image :src=\"scope.row.userAvatar\" :preview-src-list=\"[scope.row.userAvatar]\"\r\n                style=\"width: 50px; height: 50px; border-radius: 50%\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column align=\"center\" prop=\"userName\" label=\"姓名\"></el-table-column>\r\n          <el-table-column align=\"center\" label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-popconfirm title=\"确定删除吗？\" @confirm=\"del(scope.row.id)\">\r\n                <el-button slot=\"reference\" type=\"danger\" style=\"margin-left: 5px\">删除</el-button>\r\n              </el-popconfirm>\r\n              <el-select v-model=\"scope.row.hyGroupName\" placeholder=\"选择分组\" @change=\"updateGroup(scope.row)\">\r\n                <el-option v-for=\"group in groupList\" :key=\"group.groupName\" :label=\"group.groupName\"\r\n                  :value=\"group.groupName\"></el-option>\r\n              </el-select>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-collapse-item>\r\n    </el-collapse>\r\n\r\n    <!-- 分页 -->\r\n    <div style=\"margin-top: 10px\">\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n        :current-page=\"params.pageNum\" :page-sizes=\"[5, 10, 15, 20]\" :page-size=\"params.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next\" :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!-- 分组管理对话框 -->\r\n    <el-dialog :visible.sync=\"showGroupDialog\" title=\"分组管理\">\r\n      <el-input v-model=\"newGroupName\" placeholder=\"新分组名\"></el-input>\r\n      <el-button type=\"primary\" @click=\"addGroup\">添加分组</el-button>\r\n      <el-table :data=\"groupList\" style=\"width: 100%; margin-top: 20px;\">\r\n        <el-table-column prop=\"groupName\" label=\"分组名\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template v-slot=\"scope\">\r\n            <el-button type=\"danger\" @click=\"deleteGroup(scope.row.groupName)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n\r\n    <!-- 添加好友对话框 -->\r\n    <el-dialog :visible.sync=\"showAddFriendDialog\" title=\"添加好友\">\r\n      <el-form :model=\"newFriend\">\r\n        <el-form-item label=\"姓名\">\r\n          <el-input v-model=\"newFriend.userName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-input v-model=\"newFriend.userAvatar\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分组\">\r\n          <el-select v-model=\"newFriend.hyGroupName\" placeholder=\"选择分组\">\r\n            <el-option v-for=\"group in groupList\" :key=\"group.groupName\" :label=\"group.groupName\"\r\n              :value=\"group.groupName\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-button type=\"primary\" @click=\"addFriend\">添加好友</el-button>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      params: {\r\n        pageNum: 1,\r\n        pageSize: 5\r\n      },\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      tableData: [],\r\n      total: 0,\r\n      showGroupDialog: false,\r\n      showAddFriendDialog: false,\r\n      newGroupName: \"\",\r\n      newFriend: {\r\n        userName: \"\",\r\n        userAvatar: \"\",\r\n        hyGroupName: \"我的好友\"\r\n      },\r\n      groupList: [],\r\n      activeGroups: []\r\n    }\r\n  },\r\n  created() {\r\n    this.findBySearch();\r\n    this.getGroups();\r\n  },\r\n  methods: {\r\n    findBySearch() {\r\n      request.get(\"/hy/list\", {\r\n        params: this.params\r\n      }).then(res => {\r\n        if (res.code === '0') {\r\n          this.tableData = res.data.list;\r\n          this.total = res.data.total;\r\n          this.groupFriends();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n    },\r\n    getGroups() {\r\n      request.get(\"/hy/groups\").then(res => {\r\n        if (res.code === '0') {\r\n          this.groupList = res.data.map(groupName => ({\r\n            groupName,\r\n            friends: []\r\n          }));\r\n          this.groupFriends();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    groupFriends() {\r\n      this.groupList.forEach(group => {\r\n        group.friends = this.tableData.filter(friend => friend.hyGroupName === group.groupName);\r\n      });\r\n    },\r\n    addGroup() {\r\n      request.post(\"/hy/updateGroup\", { hyGroupName: this.newGroupName }).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '分组添加成功',\r\n            type: 'success'\r\n          });\r\n          this.getGroups();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteGroup(groupName) {\r\n      request.post(\"/hy/deleteGroup\", { groupName }).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '分组删除成功',\r\n            type: 'success'\r\n          });\r\n          this.getGroups();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    addFriend() {\r\n      request.post(\"/hy/add\", this.newFriend).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '好友添加成功',\r\n            type: 'success'\r\n          });\r\n          this.findBySearch();\r\n          this.showAddFriendDialog = false;\r\n          this.newFriend = { userName: \"\", userAvatar: \"\", hyGroupName: \"我的好友\" };\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    updateGroup(friend) {\r\n      request.post(\"/hy/update\", friend).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '分组更新成功',\r\n            type: 'success'\r\n          });\r\n          this.findBySearch();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      });\r\n    },\r\n    handleSizeChange(pageSize) {\r\n      this.params.pageSize = pageSize;\r\n      this.findBySearch();\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.params.pageNum = pageNum;\r\n      this.findBySearch();\r\n    },\r\n    del(id) {\r\n      request.delete(\"/hy/\" + id).then(res => {\r\n        if (res.code === '0') {\r\n          this.$message({\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n          this.findBySearch();\r\n        } else {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}