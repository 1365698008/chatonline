{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport request from \"@/utils/request\";\nimport emojis from \"@/assets/emoji\";\nimport axios from 'axios';\nlet client;\nexport default {\n  data() {\n    return {\n      user: {},\n      permission: [],\n      emojis: [],\n      messages: [],\n      users: {},\n      fromUser: \"\",\n      toUser: \"\",\n      toAvatar: \"\",\n      unRead: {},\n      id: \"\"\n    };\n  },\n  // 页面加载的时候，做一些事情，在created里面\n  mounted() {\n    this.emojis = emojis.split(\",\");\n    this.user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n    this.fromUser = this.user.role + \"_\" + this.user.name;\n    client = new WebSocket(`ws://localhost:8080/imserverSingle`);\n    client.onopen = () => {\n      console.log(\"websocket open\");\n    };\n    client.onclose = () => {\n      // 页面刷新的时候和后台websocket服务关闭的时候\n      console.log(\"websocket close\");\n    };\n    client.onmessage = msg => {\n      if (msg.data) {\n        let json = JSON.parse(msg.data);\n        if (json.content && json.fromuser === this.fromUser && json.touser === this.toUser || json.touser === this.fromUser && json.fromuser === this.toUser) {\n          // 聊天消息\n          this.messages.push(json);\n          this.scrollToBottom(); // 滚动页面到最底部\n        }\n        // 加载消息数字\n        if (this.toUser === json.fromuser) {\n          this.setUnReadNums(); // 清空正在聊天人的消息数字\n        } else {\n          this.loadUnReadNums();\n        }\n      }\n    };\n\n    // 加载聊天数据\n    this.load();\n\n    // 查询用户\n    request.get(\"/user\").then(res => {\n      res.data = res.data.filter(v => v.role + \"_\" + v.name !== this.fromUser && v.role === \"ADMIN\");\n      this.$set(this.users, \"admin\", res.data);\n    });\n    request.get(\"/user\").then(res => {\n      res.data = res.data.filter(v => v.role + \"_\" + v.name !== this.fromUser && v.role === \"TEACHER\");\n      this.$set(this.users, \"teacher\", res.data);\n    });\n    request.get(\"/user\").then(res => {\n      res.data = res.data.filter(v => v.role + \"_\" + v.name !== this.fromUser && v.role === \"STUDENT\");\n      this.$set(this.users, \"student\", res.data);\n    });\n  },\n  beforeDestroy() {\n    if (client) {\n      client.close();\n    }\n  },\n  // 定义一些页面上控件出发的事件调用的方法\n  methods: {\n    load() {\n      request.get(\"/imsingle?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser).then(res => {\n        if (res.code === \"0\") {\n          console.log(res);\n          this.messages = res.data;\n          this.scrollToBottom(); // 滚动条滚动到最底部\n        } else {\n          this.$notify.error(res.msg);\n        }\n        this.loadUnReadNums();\n      });\n    },\n    setUnReadNums() {\n      request.get(\"/imsingle?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser).then(res => {\n        this.loadUnReadNums();\n      });\n    },\n    loadUnReadNums() {\n      // 查询未读数量\n      request.get(\"/imsingle/unReadNums?toUsername=\" + this.fromUser).then(res => {\n        this.unRead = res.data;\n      });\n    },\n    send() {\n      if (!this.toUser) {\n        this.$notify.error(\"请选择聊天用户\");\n        return;\n      }\n      if (client) {\n        let message = this.getMessage(\"text\");\n        client.send(JSON.stringify(message));\n      }\n      document.getElementById(\"im-content\").innerHTML = \"\"; // 清空输入框\n    },\n\n    selectToUser(item) {\n      this.toUser = item.role + \"_\" + item.name;\n      this.toAvatar = item.avatar;\n      //查询聊天记录\n      this.load();\n    },\n    download(file) {\n      window.open(file);\n    },\n    getMessage(type) {\n      let inputBox = document.getElementById(\"im-content\");\n      const content = inputBox.innerHTML;\n      if (!content && type === \"text\") {\n        this.$notify.error(\"请输入聊天内容\");\n        return;\n      }\n      return {\n        fromuser: this.fromUser,\n        fromavatar: this.user.avatar,\n        touser: this.toUser,\n        toavatar: this.toAvatar,\n        content: content,\n        type: type\n      };\n    },\n    handleFile(file) {\n      if (client) {\n        let message = this.getMessage(\"img\");\n        message.content = file.data;\n        let extName = file.data.substring(file.data.lastIndexOf(\".\") + 1);\n        if ([\"png\", \"jpg\", \"jpeg\", \"gif\", \"bmp\", \"tiff\", \"svg\", \"webp\"].includes(extName)) {\n          message.type = \"img\";\n        } else {\n          message.type = \"file\";\n        }\n        client.send(JSON.stringify(message));\n      }\n    },\n    clickEmoji(emoji) {\n      document.getElementById(\"im-content\").innerHTML += emoji;\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        // 设置聊天滚动条到底部\n        let imMessageBox = document.getElementsByClassName(\"im-message-box\")[0];\n        //设置滚动条到最底部\n        imMessageBox.scrollTop = imMessageBox.scrollHeight;\n        console.log(\"触发滚动\");\n      });\n    },\n    don() {\n      if (!this.toUser) {\n        this.$notify.error(\"请选择聊天用户\");\n        return;\n      } else {\n        axios({\n          url: \"http://localhost:8080/imsingle/don?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser,\n          method: 'GET',\n          responseType: 'blob' // 重要：设置响应类型为blob\n        }).then(response => {\n          const blob = new Blob([response.data], {\n            type: 'application/octet-stream'\n          });\n          const link = document.createElement('a');\n          link.href = URL.createObjectURL(blob);\n          link.download = '聊天记录.xls'; // 设置下载文件名\n          link.click();\n        }).catch(error => {\n          console.error('下载文件时发生错误:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["request","emojis","axios","client","data","user","permission","messages","users","fromUser","toUser","toAvatar","unRead","id","mounted","split","JSON","parse","localStorage","getItem","role","name","WebSocket","onopen","console","log","onclose","onmessage","msg","json","content","fromuser","touser","push","scrollToBottom","setUnReadNums","loadUnReadNums","load","get","then","res","filter","v","$set","beforeDestroy","close","methods","code","$notify","error","send","message","getMessage","stringify","document","getElementById","innerHTML","selectToUser","item","avatar","download","file","window","open","type","inputBox","fromavatar","toavatar","handleFile","extName","substring","lastIndexOf","includes","clickEmoji","emoji","$nextTick","imMessageBox","getElementsByClassName","scrollTop","scrollHeight","don","url","method","responseType","response","blob","Blob","link","createElement","href","URL","createObjectURL","click","catch"],"sources":["src/views/ImSingle.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main-body-content\">\r\n      <div style=\"display: flex; align-items: flex-start\">\r\n        <div\r\n          style=\"\r\n            width: 200px;\r\n            border: 1px solid #ddd;\r\n            border-radius: 5px;\r\n            height: calc(50vh + 125px);\r\n          \"\r\n        >\r\n          <div\r\n            style=\"\r\n              padding: 10px;\r\n              border-bottom: 1px solid #ddd;\r\n              color: #000;\r\n              background-color: #eee;\r\n            \"\r\n          >\r\n            老板\r\n          </div>\r\n          <div class=\"user-list-box\">\r\n            <div\r\n              class=\"user-list-item\"\r\n              v-for=\"item in users.admin\"\r\n              :key=\"item.id\"\r\n              @click=\"selectToUser(item)\"\r\n            >\r\n              <img\r\n                :src=\"item.avatar\"\r\n                style=\"width: 30px; height: 30px; border-radius: 50%\"\r\n              />\r\n              <span\r\n                style=\"flex: 1; margin-left: 10px\"\r\n                :style=\"{\r\n                  color:\r\n                    item.role + '_' + item.name === toUser ? '#3a8ee6' : '',\r\n                }\"\r\n                >{{ item.name }}</span\r\n              >\r\n              <div\r\n                class=\"user-list-item-badge\"\r\n                v-if=\"unRead?.[item.role + '_' + item.name]\"\r\n              >\r\n                {{ unRead?.[item.role + \"_\" + item.name] }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"\r\n              padding: 10px;\r\n              border-bottom: 1px solid #ddd;\r\n              color: #000;\r\n              background-color: #eee;\r\n            \"\r\n          >\r\n            领导\r\n          </div>\r\n          <div class=\"user-list-box\" style=\"height: 30%\">\r\n            <div\r\n              class=\"user-list-item\"\r\n              v-for=\"item in users.teacher\"\r\n              :key=\"item.id\"\r\n              @click=\"selectToUser(item)\"\r\n            >\r\n              <img\r\n                :src=\"item.avatar\"\r\n                style=\"width: 30px; height: 30px; border-radius: 50%\"\r\n              />\r\n              <span\r\n                style=\"flex: 1; margin-left: 10px\"\r\n                :style=\"{\r\n                  color:\r\n                    item.role + '_' + item.name === toUser ? '#3a8ee6' : '',\r\n                }\"\r\n                >{{ item.name }}</span\r\n              >\r\n              <div\r\n                class=\"user-list-item-badge\"\r\n                v-if=\"unRead?.[item.role + '_' + item.name]\"\r\n              >\r\n                {{ unRead?.[item.role + \"_\" + item.name] }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style=\"\r\n              padding: 10px;\r\n              border-bottom: 1px solid #ddd;\r\n              color: #000;\r\n              background-color: #eee;\r\n            \"\r\n          >\r\n            员工\r\n          </div>\r\n          <div class=\"user-list-box\" style=\"height: 30%; overflow-y: scroll\">\r\n            <div\r\n              class=\"user-list-item\"\r\n              v-for=\"item in users.student\"\r\n              :key=\"item.id\"\r\n              @click=\"selectToUser(item)\"\r\n            >\r\n              <img\r\n                :src=\"item.avatar\"\r\n                style=\"width: 30px; height: 30px; border-radius: 50%\"\r\n              />\r\n              <span\r\n                style=\"flex: 1; margin-left: 10px\"\r\n                :style=\"{\r\n                  color:\r\n                    item.role + '_' + item.name === toUser ? '#3a8ee6' : '',\r\n                }\"\r\n                >{{ item.name }}</span\r\n              >\r\n              <div\r\n                class=\"user-list-item-badge\"\r\n                v-if=\"unRead?.[item.role + '_' + item.name]\"\r\n              >\r\n                {{ unRead?.[item.role + \"_\" + item.name] }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!--  中间部分  -->\r\n        <div\r\n          style=\"\r\n            width: 50%;\r\n            border: 1px solid #ddd;\r\n            border-radius: 5px;\r\n            background-color: #f1f1f1;\r\n            margin: 0 10px;\r\n          \"\r\n        >\r\n          <div\r\n            style=\"\r\n              padding: 20px 0;\r\n              text-align: center;\r\n              border-bottom: 1px solid #ddd;\r\n              color: #000;\r\n              background-color: #eee;\r\n              height: 60px;\r\n            \"\r\n          >\r\n            {{ toUser?.substring(toUser.indexOf(\"_\") + 1) }}\r\n          </div>\r\n          <div class=\"im-message-box\">\r\n            <div v-for=\"item in messages\" :key=\"item.id\">\r\n              <!--  右边的气泡 -->\r\n              <div\r\n                style=\"\r\n                  display: flex;\r\n                  flex-direction: row-reverse;\r\n                  align-items: flex-start;\r\n                \"\r\n                v-if=\"item.fromuser === fromUser\"\r\n              >\r\n                <img\r\n                  :src=\"item.fromavatar\"\r\n                  alt=\"\"\r\n                  style=\"\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    border-radius: 50%;\r\n                    margin-left: 10px;\r\n                  \"\r\n                />\r\n                <div\r\n                  class=\"im-message im-message-right\"\r\n                  v-html=\"item.content\"\r\n                  v-if=\"item.type === 'text'\"\r\n                ></div>\r\n                <div\r\n                  class=\"im-message\"\r\n                  style=\"padding: 0\"\r\n                  v-if=\"item.type === 'img'\"\r\n                >\r\n                  <!-- 注意  el-image 的load函数必须加上，否则无法触发滚动条到最底端 -->\r\n                  <el-image\r\n                    style=\"width: 100px\"\r\n                    :src=\"item.content\"\r\n                    alt=\"\"\r\n                    :preview-src-list=\"[item.content]\"\r\n                    @load=\"scrollToBottom\"\r\n                  ></el-image>\r\n                </div>\r\n                <div\r\n                  class=\"im-message im-message-download\"\r\n                  v-if=\"item.type === 'file'\"\r\n                  @click=\"download(item.content)\"\r\n                >\r\n                  <div>\r\n                    <i class=\"el-icon-folder-opened\"></i>\r\n                    <span>{{\r\n                      item.content.substring(item.content.indexOf(\"-\") + 1)\r\n                    }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!--  左边的气泡 -->\r\n              <div style=\"display: flex; align-items: flex-start\" v-else>\r\n                <img\r\n                  :src=\"item.fromavatar\"\r\n                  alt=\"\"\r\n                  style=\"\r\n                    width: 40px;\r\n                    height: 40px;\r\n                    border-radius: 50%;\r\n                    margin-right: 10px;\r\n                  \"\r\n                />\r\n                <div style=\"width: 100%\">\r\n                  <div style=\"color: #888; font-size: 12px; width: 50%\">\r\n                    {{\r\n                      item.fromuser?.substring(item.fromuser.indexOf(\"_\") + 1)\r\n                    }}\r\n                  </div>\r\n                  <div\r\n                    class=\"im-message im-message-left\"\r\n                    v-html=\"item.content\"\r\n                    v-if=\"item.type === 'text'\"\r\n                  ></div>\r\n                  <div\r\n                    class=\"im-message\"\r\n                    style=\"padding: 0\"\r\n                    v-if=\"item.type === 'img'\"\r\n                  >\r\n                    <!-- 注意  el-image 的load函数必须加上，否则无法触发滚动条到最底端 -->\r\n                    <el-image\r\n                      style=\"width: 100px\"\r\n                      :src=\"item.content\"\r\n                      alt=\"\"\r\n                      :preview-src-list=\"[item.content]\"\r\n                      @load=\"scrollToBottom\"\r\n                    ></el-image>\r\n                  </div>\r\n                  <div\r\n                    class=\"im-message im-message-download\"\r\n                    v-if=\"item.type === 'file'\"\r\n                    @click=\"download(item.content)\"\r\n                  >\r\n                    <div>\r\n                      <i class=\"el-icon-folder-opened\"></i>\r\n                      <span>{{\r\n                        item.content.substring(item.content.indexOf(\"-\") + 1)\r\n                      }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 输入区域 -->\r\n          <div\r\n            style=\"\r\n              padding: 10px 5px;\r\n              border-top: 1px solid #ddd;\r\n              display: flex;\r\n              align-items: center;\r\n              width: 100%;\r\n            \"\r\n          >\r\n            <el-popover placement=\"top\" width=\"300\" trigger=\"click\">\r\n              <div class=\"emoji-box\">\r\n                <span\r\n                  v-for=\"(item, index) in emojis\"\r\n                  :key=\"index\"\r\n                  style=\"margin-right: 5px; font-size: 20px; cursor: pointer\"\r\n                  v-html=\"item\"\r\n                  @click=\"clickEmoji(item)\"\r\n                >\r\n                </span>\r\n              </div>\r\n              <i\r\n                slot=\"reference\"\r\n                class=\"fa fa-smile-o\"\r\n                style=\"font-size: 22px; color: #666\"\r\n              ></i>\r\n            </el-popover>\r\n            <div style=\"margin-left: 5px\">\r\n              <el-upload\r\n                action=\"http://localhost:8080/files/upload\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleFile\"\r\n              >\r\n                <i\r\n                  class=\"fa fa-folder-open-o\"\r\n                  style=\"font-size: 20px; color: #666\"\r\n                ></i>\r\n              </el-upload>\r\n            </div>\r\n            <div\r\n              id=\"im-content\"\r\n              contenteditable\r\n              style=\"\r\n                flex: 1;\r\n                background-color: #fff;\r\n                margin: 0 5px;\r\n                padding: 10px;\r\n                border: 1px solid #ddd;\r\n                border-radius: 2px;\r\n                outline: none;\r\n                font-size: 14px;\r\n              \"\r\n            ></div>\r\n            <el-button type=\"primary\" @click=\"don\" style=\"border: none\"\r\n              >下载聊天记录</el-button\r\n            >\r\n            <el-button type=\"primary\" @click=\"send\" style=\"border: none\"\r\n              >发送</el-button\r\n            >\r\n          </div>\r\n        </div>\r\n        <!--  中间部分结束  -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport emojis from \"@/assets/emoji\";\r\n\r\nimport axios from 'axios';\r\nlet client;\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {},\r\n      permission: [],\r\n      emojis: [],\r\n      messages: [],\r\n      users: {},\r\n      fromUser: \"\",\r\n      toUser: \"\",\r\n      toAvatar: \"\",\r\n      unRead: {},\r\n      id: \"\",\r\n    };\r\n  },\r\n  // 页面加载的时候，做一些事情，在created里面\r\n  mounted() {\r\n    this.emojis = emojis.split(\",\");\r\n\r\n    this.user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\n    this.fromUser = this.user.role + \"_\" + this.user.name;\r\n\r\n    client = new WebSocket(`ws://localhost:8080/imserverSingle`);\r\n\r\n    client.onopen = () => {\r\n      console.log(\"websocket open\");\r\n    };\r\n    client.onclose = () => {\r\n      // 页面刷新的时候和后台websocket服务关闭的时候\r\n      console.log(\"websocket close\");\r\n    };\r\n\r\n    client.onmessage = (msg) => {\r\n      if (msg.data) {\r\n        let json = JSON.parse(msg.data);\r\n        if (\r\n          (json.content &&\r\n            json.fromuser === this.fromUser &&\r\n            json.touser === this.toUser) ||\r\n          (json.touser === this.fromUser && json.fromuser === this.toUser)\r\n        ) {\r\n          // 聊天消息\r\n          this.messages.push(json);\r\n          this.scrollToBottom(); // 滚动页面到最底部\r\n        }\r\n        // 加载消息数字\r\n        if (this.toUser === json.fromuser) {\r\n          this.setUnReadNums(); // 清空正在聊天人的消息数字\r\n        } else {\r\n          this.loadUnReadNums();\r\n        }\r\n      }\r\n    };\r\n\r\n    // 加载聊天数据\r\n    this.load();\r\n\r\n    // 查询用户\r\n    request.get(\"/user\").then((res) => {\r\n      res.data = res.data.filter(\r\n        (v) => v.role + \"_\" + v.name !== this.fromUser && v.role === \"ADMIN\"\r\n      );\r\n      this.$set(this.users, \"admin\", res.data);\r\n    });\r\n    request.get(\"/user\").then((res) => {\r\n      res.data = res.data.filter(\r\n        (v) => v.role + \"_\" + v.name !== this.fromUser && v.role === \"TEACHER\"\r\n      );\r\n      this.$set(this.users, \"teacher\", res.data);\r\n    });\r\n    request.get(\"/user\").then((res) => {\r\n      res.data = res.data.filter(\r\n        (v) => v.role + \"_\" + v.name !== this.fromUser && v.role === \"STUDENT\"\r\n      );\r\n      this.$set(this.users, \"student\", res.data);\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    if (client) {\r\n      client.close();\r\n    }\r\n  },\r\n\r\n  // 定义一些页面上控件出发的事件调用的方法\r\n  methods: {\r\n    load() {\r\n      request\r\n        .get(\"/imsingle?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser)\r\n        .then((res) => {\r\n          if (res.code === \"0\") {\r\n            console.log(res);\r\n            this.messages = res.data;\r\n            this.scrollToBottom(); // 滚动条滚动到最底部\r\n          } else {\r\n            this.$notify.error(res.msg);\r\n          }\r\n          this.loadUnReadNums();\r\n        });\r\n    },\r\n    setUnReadNums() {\r\n      request\r\n        .get(\"/imsingle?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser)\r\n        .then((res) => {\r\n          this.loadUnReadNums();\r\n        });\r\n    },\r\n    loadUnReadNums() {\r\n      // 查询未读数量\r\n      request\r\n        .get(\"/imsingle/unReadNums?toUsername=\" + this.fromUser)\r\n        .then((res) => {\r\n          this.unRead = res.data;\r\n        });\r\n    },\r\n    send() {\r\n      if (!this.toUser) {\r\n        this.$notify.error(\"请选择聊天用户\");\r\n        return;\r\n      }\r\n      if (client) {\r\n        let message = this.getMessage(\"text\");\r\n        client.send(JSON.stringify(message));\r\n      }\r\n      document.getElementById(\"im-content\").innerHTML = \"\"; // 清空输入框\r\n    },\r\n    selectToUser(item) {\r\n      this.toUser = item.role + \"_\" + item.name;\r\n      this.toAvatar = item.avatar;\r\n      //查询聊天记录\r\n      this.load();\r\n    },\r\n    download(file) {\r\n      window.open(file);\r\n    },\r\n    getMessage(type) {\r\n      let inputBox = document.getElementById(\"im-content\");\r\n      const content = inputBox.innerHTML;\r\n      if (!content && type === \"text\") {\r\n        this.$notify.error(\"请输入聊天内容\");\r\n        return;\r\n      }\r\n      return {\r\n        fromuser: this.fromUser,\r\n        fromavatar: this.user.avatar,\r\n        touser: this.toUser,\r\n        toavatar: this.toAvatar,\r\n        content: content,\r\n        type: type,\r\n      };\r\n    },\r\n    handleFile(file) {\r\n      if (client) {\r\n        let message = this.getMessage(\"img\");\r\n        message.content = file.data;\r\n        let extName = file.data.substring(file.data.lastIndexOf(\".\") + 1);\r\n        if (\r\n          [\"png\", \"jpg\", \"jpeg\", \"gif\", \"bmp\", \"tiff\", \"svg\", \"webp\"].includes(\r\n            extName\r\n          )\r\n        ) {\r\n          message.type = \"img\";\r\n        } else {\r\n          message.type = \"file\";\r\n        }\r\n        client.send(JSON.stringify(message));\r\n      }\r\n    },\r\n    clickEmoji(emoji) {\r\n      document.getElementById(\"im-content\").innerHTML += emoji;\r\n    },\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        // 设置聊天滚动条到底部\r\n        let imMessageBox = document.getElementsByClassName(\"im-message-box\")[0];\r\n        //设置滚动条到最底部\r\n        imMessageBox.scrollTop = imMessageBox.scrollHeight;\r\n        console.log(\"触发滚动\");\r\n      });\r\n    },\r\n    don() {\r\n      if (!this.toUser) {\r\n        this.$notify.error(\"请选择聊天用户\");\r\n        return;\r\n      } else {\r\n        axios({\r\n          url: \"http://localhost:8080/imsingle/don?fromUser=\" + this.fromUser + \"&toUser=\" + this.toUser,\r\n          method: 'GET',\r\n          responseType: 'blob', // 重要：设置响应类型为blob\r\n        }).then((response) => {\r\n          const blob = new Blob([response.data], { type: 'application/octet-stream' });\r\n          const link = document.createElement('a');\r\n          link.href = URL.createObjectURL(blob);\r\n          link.download = '聊天记录.xls'; // 设置下载文件名\r\n          link.click();\r\n        }).catch((error) => {\r\n          console.error('下载文件时发生错误:', error);\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.im-message-box {\r\n  height: 50vh;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  background-color: white;\r\n}\r\n\r\n.emoji-box {\r\n  height: 200px;\r\n  overflow-y: scroll;\r\n  line-height: 30px;\r\n}\r\n\r\n.user-list-box {\r\n  overflow-y: auto;\r\n}\r\n\r\n.im-message-box::-webkit-scrollbar,\r\n.emoji-box::-webkit-scrollbar,\r\n.user-list-box::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.im-message-box::-webkit-scrollbar-thumb,\r\n.emoji-box::-webkit-scrollbar-thumb,\r\n.user-list-box::-webkit-scrollbar-thumb {\r\n  border-radius: 10px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.im-message-box::-webkit-scrollbar-track,\r\n.emoji-box::-webkit-scrollbar-track,\r\n.user-list-box::-webkit-scrollbar-track {\r\n  border-radius: 0;\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.im-message {\r\n  font-size: 14px;\r\n  padding: 10px;\r\n  margin: 5px 0;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  max-width: 50%;\r\n  line-height: 20px;\r\n  width: fit-content;\r\n}\r\n\r\n.im-message-left {\r\n  background-color: #fff;\r\n}\r\n\r\n.im-message-right {\r\n  background-color: #26d470;\r\n}\r\n\r\n.im-message-download {\r\n  background-color: #dbedff;\r\n  cursor: pointer;\r\n}\r\n\r\n.user-list-item {\r\n  display: flex;\r\n  padding: 10px;\r\n  align-items: center;\r\n  border-bottom: 1px solid #eee;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.user-list-item-badge {\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 12px;\r\n  color: white;\r\n  background-color: red;\r\n}\r\n\r\n.user-list-item:nth-last-child(1) {\r\n  border: none;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}